using System.Diagnostics;
using DataLoading;

// Prints array as 28 x 28 picture (generated by ChatGPT)
void PrintPicture(float[] array)
{

    for (int i = 0; i < array.Length; i++)
    {
        Console.Write($"{array[i],3} "); // Each number is formatted to take up 3 spaces

        // After every 28 elements, print a newline
        if ((i + 1) % 28 == 0)
        {
            Console.WriteLine();
        }
    }

// Optional: Print a final newline if the array length is not a multiple of 28
    if (array.Length % 28 != 0)
    {
        Console.WriteLine();
    }
}

// using this for always finding the file (even from binary I hope)
string solutionRoot = AppDomain.CurrentDomain.BaseDirectory;
while (!Directory.Exists(Path.Combine(solutionRoot, "data")))
{
    solutionRoot = Directory.GetParent(solutionRoot).FullName;
}
string dataFilePath = Path.Combine(solutionRoot, "data", "fashion_mnist_train_vectors.csv");



DataLoader loader = new DataLoader(dataFilePath);

// reads one line
var picture = loader.ReadOneVector();
Console.WriteLine(picture.Length);
PrintPicture(picture[0]);

    
// can't read whole file (read by line approach was selected)
try
{
    picture = loader.ReadAllVectors();
    Console.WriteLine(picture.Length);
}
catch (ApplicationException e)
{
    Console.WriteLine(e.Message);
}

// reads second line
picture = loader.ReadOneVector();
Console.WriteLine(picture.Length); 
PrintPicture(picture[0]);

loader.Dispose();



DataLoader loader2 = new DataLoader(dataFilePath, true);
float[][] picture2;

// can't read one line (read whole file was selected in constructor)
try
{
    picture2 = loader2.ReadOneVector();
    Console.WriteLine(picture2.Length);
    PrintPicture(picture2[0]);
}
catch (ApplicationException e)
{
    Console.WriteLine(e.Message);
}

int n = 128;
for (int i = 0; i < 469; i++)
{
    picture2 = loader2.ReadNVectors(n);
    Console.WriteLine(i + " : " + picture2.Length);
    if (i == 468)
    {
        Console.WriteLine(picture2[94] != null);
        Console.WriteLine(picture2[95] == null);
    }
}



loader2.Dispose();
